version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092  # Kafka escucha en todas las interfaces en el puerto 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092  # Para comunicación externa a través de localhost
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "customer_requests:1:1,taxi_updates:1:1,taxi_instructions:1:1,map_updates:1:1"
    depends_on:
      zookeeper:
        condition: service_healthy

    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 30s
      timeout: 10s
      retries: 5

  central:
    build:
      context: .
      dockerfile: docker/Dockerfile.central
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=localhost:9092
    volumes:
      - ./data:/data  # Monta el directorio de datos en el contenedor para archivos como taxis.txt y map_config.txt
    depends_on:
      - kafka
    command: >
      python ec_central.py
  
  taxi:
    build:
      context: .
      dockerfile: docker/Dockerfile.taxi
    depends_on:
      - kafka
      - central
    command: >
      python ec_de.py ec_central 5000 kafka:9092 ec_de 6000 1  
    environment:
      - EC_CENTRAL_IP=localhost
      - EC_CENTRAL_PORT=5000
      - KAFKA_BROKER=localhost:9092
      - EC_S_IP=localhost
      - EC_S_PORT=6000
      - TAXI_ID=1
    ports:
      - "6000:6000"
  customer:
    build:
      context: .
      dockerfile: docker/Dockerfile.customer
    depends_on:
      - kafka
    volumes:
      - ./data:/data  # Monta el directorio de datos en el contenedor
    command: >
      python ec_customer.py localhost:9092 1 /data/services.txt
    environment:
      - KAFKA_BROKER=localhost:9092
      - CUSTOMER_ID=1
      - SERVICES_FILE=/data/services.txt
